package com.example.healthcheckapp;

import android.content.Context; // برای استفاده از Context در اپلیکیشن
import android.content.Intent; // برای انتقال به صفحه دیگر
import android.os.Bundle; // برای استفاده از Bundle در ارسال اطلاعات
import android.view.View; // برای کار با رویدادهای نما (View)
import android.widget.Toast; // برای نمایش پیام‌های کوتاه به کاربر

import androidx.appcompat.app.AppCompatActivity; // برای استفاده از قابلیت‌های AppCompatActivity

// ایمپورت کتابخانه‌های Volley برای درخواست‌های HTTP
import com.android.volley.Request; // برای تعیین نوع درخواست HTTP
import com.android.volley.RequestQueue; // برای مدیریت صف درخواست‌ها
import com.android.volley.Response; // برای پاسخ‌دهی به درخواست‌ها
import com.android.volley.VolleyError; // برای مدیریت خطاها در درخواست‌ها
import com.android.volley.toolbox.StringRequest; // برای ارسال درخواست‌های متنی
import com.android.volley.toolbox.Volley; // برای مدیریت صف درخواست‌ها به طور خودکار

// ایمپورت کتابخانه‌های Material Design برای استفاده از اجزای گرافیکی
import com.google.android.material.button.MaterialButton; // برای استفاده از دکمه‌های Material Design
import com.google.android.material.textfield.TextInputEditText; // برای استفاده از فیلدهای متنی

// ایمپورت کتابخانه JSON برای پردازش پاسخ‌های JSON از سرور
import org.json.JSONException; // برای مدیریت استثناهای JSON
import org.json.JSONObject; // برای کار با داده‌های JSON

// ایمپورت کتابخانه‌های اضافی برای استفاده از Map و Pattern
import java.util.HashMap; // برای استفاده از Map برای ذخیره داده‌ها
import java.util.Map; // برای استفاده از Map در ارسال داده‌ها
import java.util.regex.Matcher; // برای مطابقت با الگوهای رشته‌ای
import java.util.regex.Pattern; // برای استفاده از الگوهای معتبر در ایمیل

public class MainActivity extends AppCompatActivity {

    private TextInputEditText etName, etSurname, etEmail; // فیلدهای ورودی نام، نام خانوادگی و ایمیل
    private MaterialButton btnNext; // دکمه ادامه برای انتقال به صفحه بعدی

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main); // تعیین فایل XML برای رابط کاربری

        // متصل کردن اجزای رابط کاربری با متغیرها
        etName = findViewById(R.id.etName); // فیلد ورودی نام
        etSurname = findViewById(R.id.etSurname); // فیلد ورودی نام خانوادگی
        etEmail = findViewById(R.id.etEmail); // فیلد ورودی ایمیل
        btnNext = findViewById(R.id.btnNext); // دکمه ادامه

        // تنظیم عملکرد دکمه ادامه
        btnNext.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // دریافت اطلاعات وارد شده توسط کاربر
                String name = etName.getText().toString().trim(); // دریافت نام
                String surname = etSurname.getText().toString().trim(); // دریافت نام خانوادگی
                String email = etEmail.getText().toString().trim(); // دریافت ایمیل

                // بررسی اینکه آیا تمامی فیلدها پر شده‌اند یا خیر
                if (name.isEmpty() || surname.isEmpty() || email.isEmpty()) {
                    // نمایش پیامی در صورت خالی بودن هر یک از فیلدها
                    Toast.makeText(MainActivity.this, "لطفا تمام فیلدها را پر کنید", Toast.LENGTH_SHORT).show();
                } else if (!isValidEmail(email)) {
                    // اگر ایمیل وارد شده معتبر نباشد
                    Toast.makeText(MainActivity.this, "ایمیل وارد شده معتبر نیست", Toast.LENGTH_SHORT).show();
                } else {
                    // در غیر این صورت، ارسال اطلاعات به سرور برای ذخیره در دیتابیس
                    saveDataToDatabase(name, surname, email);
                }
            }
        });
    }

    // تابع برای بررسی اعتبار ایمیل
    private boolean isValidEmail(String email) {
        // الگوی معتبر برای ایمیل
        String emailPattern = "[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}";
        Pattern pattern = Pattern.compile(emailPattern); // ساخت الگو با استفاده از رشته الگو
        Matcher matcher = pattern.matcher(email); // تطبیق ایمیل با الگو
        return matcher.matches(); // اگر ایمیل با الگو تطابق داشته باشد، معتبر است
    }

    // تابع برای ارسال اطلاعات به دیتابیس با استفاده از Volley
    private void saveDataToDatabase(String name, String surname, String email) {
        String url = "https://b.mrbackend.ir/register.php"; // آدرس اسکریپت PHP برای ثبت اطلاعات در سرور

        // ساخت درخواست HTTP با استفاده از Volley
        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        try {
                            // پردازش پاسخ JSON از سرور
                            JSONObject jsonResponse = new JSONObject(response);
                            String status = jsonResponse.getString("status"); // وضعیت پاسخ از سرور

                            // بررسی وضعیت پاسخ و انجام اقدامات لازم
                            if (status.equals("success")) {
                                // در صورت موفقیت، نمایش پیامی برای کاربر
                                Toast.makeText(MainActivity.this, "اطلاعات با موفقیت ذخیره شد.", Toast.LENGTH_SHORT).show();
                                // انتقال به صفحه دوم و ارسال اطلاعات به آن
                                Intent intent = new Intent(MainActivity.this, QuestionsActivity.class);
                                intent.putExtra("name", name);
                                intent.putExtra("surname", surname);
                                intent.putExtra("email", email);
                                startActivity(intent); // شروع فعالیت جدید
                            } else {
                                // اگر ایمیل تکراری باشد، نمایش پیام خطا
                                Toast.makeText(MainActivity.this, "خطا ایمیل تکراری است.", Toast.LENGTH_SHORT).show();
                            }
                        } catch (JSONException e) {
                            // در صورت بروز خطا در پردازش پاسخ JSON
                            e.printStackTrace();
                            Toast.makeText(MainActivity.this, "خطا در پردازش پاسخ", Toast.LENGTH_SHORT).show();
                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        // در صورت بروز خطا در ارسال درخواست به سرور
                        Toast.makeText(MainActivity.this, "خطا در اتصال به سرور", Toast.LENGTH_SHORT).show();
                    }
                }) {
            @Override
            protected Map<String, String> getParams() {
                // ارسال پارامترها به سرور
                Map<String, String> params = new HashMap<>();
                params.put("name", name); // اضافه کردن نام به پارامترها
                params.put("surname", surname); // اضافه کردن نام خانوادگی به پارامترها
                params.put("email", email); // اضافه کردن ایمیل به پارامترها
                return params; // بازگشت پارامترها به سرور
            }
        };

        // افزودن درخواست به صف درخواست‌های Volley
        RequestQueue requestQueue = Volley.newRequestQueue(this);
        requestQueue.add(stringRequest); // ارسال درخواست به صف
    }
}
